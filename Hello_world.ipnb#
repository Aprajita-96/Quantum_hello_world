{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from qiskit import *"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "qr=QuantumRegister(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "cr= ClassicalRegister(2);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "circuit = QuantumCircuit(qr,cr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 167.356x204.68 with 1 Axes>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "circuit.draw(output='mpl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<qiskit.circuit.instructionset.InstructionSet at 0x1e994c3e648>"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "circuit.cx(qr[0],qr[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "draw() got an unexpected keyword argument 'ouput'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-8-e9e14af6f860>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcircuit\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdraw\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mouput\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'mfl'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: draw() got an unexpected keyword argument 'ouput'"
     ]
    }
   ],
   "source": [
    "circuit.draw(ouput='mfl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "ename": "TypeError",
     "evalue": "draw() got an unexpected keyword argument 'outpu'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m                                 Traceback (most recent call last)",
      "\u001b[1;32m<ipython-input-9-aa9eb34fdb45>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m\u001b[0m\n\u001b[1;32m----> 1\u001b[1;33m \u001b[0mcircuit\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mdraw\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0moutpu\u001b[0m\u001b[1;33m=\u001b[0m\u001b[1;34m'mpl'\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m",
      "\u001b[1;31mTypeError\u001b[0m: draw() got an unexpected keyword argument 'outpu'"
     ]
    }
   ],
   "source": [
    "circuit.draw(outpu='mpl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 227.556x204.68 with 1 Axes>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "circuit.draw(output='mpl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "circuit.draw()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
